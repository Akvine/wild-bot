#### Server properties ####
server.port=8106
server.servlet.context-path=/wild-bot

### Telegram bot properties ###
telegram.bot.enabled=true
telegram.bot.dev.mode.enabled=false
telegram.bot.secret=${TELEGRAM_BOT_SECRET}
telegram.bot.path=${TELEGRAM_BOT_PATH}
telegram.bot.allowed_updates=callback_query,message
telegram.bot.token=${TELEGRAM_BOT_TOKEN}
telegram.bot.username=${TELEGRAM_BOT_USERNAME}

### Database properties ###
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate

### KeepAlive properties ###
db.keepalive.interval.seconds=5
db.keepalive.delay.coefficient=10

### Lock properties ###
db.lock.check.interval.millis=1000
db.lock.expire.after.created.seconds=86400
db.lock.max.waiting.threads.per.lock=3

### Admin properties ###
admin.secret=${ADMIN_SECRET}
max.clients.send.message.count=100

### Scheduled properties ###
global.sync.enabled=true
global.sync.cron.milliseconds=1500000
sync.card.types.enabled=true
sync.card.enabled=true
sync.adverts.enabled=true
delete.expired.subscriptions.cron=0 0 0 * * *
notify.clients.expired.subscription.cron=0 0 0 * * *
check.advert.cron.milliseconds=300000
check.advert.iterations.before.increase=6

### Custom properties ###
max.start.sum.difference=500
max.running.adverts.limit=6
advert.min.budget.sum=500
advert.min.cpm=700
advert.max.cpm=4000
advert.budget.sum.increase.value=1000
advert.cpm.increase.value=100
telegram.bot.support.url=${TELEGRAM_BOT_SUPPORT_URL}
client.subscription.expires.days.after=30
client.subscription.notify.days.before=3

### Validation properties ###
photo.width.min.pixels=700
photo.height.min.pixels=900
photo.max.size.megabytes=5

### Wildberries integration properties ###
wildberries.api.token=${WILDBERRIES_API_TOKEN}
wildberries.warehouse.id=${WILDBERROES_WAREHOUSE_ID}
wildberries.change.stocks.count=5

### Logging Properties ###
logging.config=classpath:logging/logback-spring-local.xml
logging.level.root=INFO
spring.main.banner-mode=console

### Toggles properties ###
create.adverts.by.api.enabled=true

### Infrastructure beans properties ###
session.storage.implementation.type=database
counter.storage.implementation.type=database

### Liquibase Properties ###
spring.liquibase.enabled=true
spring.liquibase.url=${DATASOURCE_URL}
spring.liquibase.user=${DATASOURCE_USERNAME}
spring.liquibase.password=${DATASOURCE_PASSWORD}
spring.liquibase.change-log=classpath:db/changelog-master.xml

### Rate Limiters properties ###
resilience4j.ratelimiter.instances.wb-get-adverts-info.limit-for-period=5
resilience4j.ratelimiter.instances.wb-get-adverts-info.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-get-adverts-info.timeout-duration=10s
resilience4j.ratelimiter.instances.wb-get-adverts.limit-for-period=5
resilience4j.ratelimiter.instances.wb-get-adverts.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-get-adverts.timeout-duration=10s
resilience4j.ratelimiter.instances.wb-advert-budget-info.limit-for-period=4
resilience4j.ratelimiter.instances.wb-advert-budget-info.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-advert-budget-info.timeout-duration=10s
resilience4j.ratelimiter.instances.wb-advert-budget-deposit.limit-for-period=1
resilience4j.ratelimiter.instances.wb-advert-budget-deposit.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-advert-budget-deposit.timeout-duration=10s
resilience4j.ratelimiter.instances.wb-advert-start.limit-for-period=5
resilience4j.ratelimiter.instances.wb-advert-start.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-advert-start.timeout-duration=10s
resilience4j.ratelimiter.instances.wb-advert-pause.limit-for-period=10
resilience4j.ratelimiter.instances.wb-advert-pause.limit-refresh-period=1m
resilience4j.ratelimiter.instances.wb-advert-pause.timeout-duration=70s
resilience4j.ratelimiter.instances.wb-change-advert-cpm.limit-for-period=5
resilience4j.ratelimiter.instances.wb-change-advert-cpm.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-change-advert-cpm.timeout-duration=10s
resilience4j.ratelimiter.instances.wb-get-advert-statistic.limit-for-period=1
resilience4j.ratelimiter.instances.wb-get-advert-statistic.limit-refresh-period=6s
resilience4j.ratelimiter.instances.wb-get-advert-statistic.timeout-duration=15s
resilience4j.ratelimiter.instances.wb-get-adverts-full-statistic-by-dates.limit-for-period=1
resilience4j.ratelimiter.instances.wb-get-adverts-full-statistic-by-dates.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-get-adverts-full-statistic-by-dates.timeout-duration=15s
resilience4j.ratelimiter.instances.wb-get-adverts-full-statistic-by-interval.limit-for-period=1
resilience4j.ratelimiter.instances.wb-get-adverts-full-statistic-by-interval.limit-refresh-period=1s
resilience4j.ratelimiter.instances.wb-get-adverts-full-statistic-by-interval.timeout-duration=15s
resilience4j.ratelimiter.instances.wb-create-auto-advert.limit-for-period=1
resilience4j.ratelimiter.instances.wb-create-auto-advert.limit-refresh-period=20s
resilience4j.ratelimiter.instances.wb-create-auto-advert.timeout-duration=25s